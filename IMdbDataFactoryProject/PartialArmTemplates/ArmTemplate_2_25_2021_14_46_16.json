{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "IMdbDataFactoryProject"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Copy_IMdb_HTTP_To_BloB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy IMdb from HTTP to Blob",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "@{concat(pipeline().parameters.FileName, '.tsv.gz')}"
							},
							{
								"name": "Destination",
								"value": "imdbsourcedata/IMDb All/@{concat(pipeline().parameters.FileName, '.tsv')}"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "BlobIMdbLinkedService",
										"type": "LinkedServiceReference"
									},
									"path": {
										"value": "imdbsourcedata/IMDb All/@{concat(pipeline().parameters.FileName, '.tsv')}",
										"type": "Expression"
									}
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "HTTP_IMdb",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@{pipeline().parameters.FileName}.tsv.gz",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "Blob_IMdb",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@{pipeline().parameters.DestinationTableName}.csv",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Log Execution - Completed",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy IMdb from HTTP to Blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Logs].[sp_UpdateLogTable]",
							"storedProcedureParameters": {
								"CopyActivity_End_Time": {
									"value": {
										"value": "@{utcnow()}",
										"type": "Expression"
									},
									"type": "String"
								},
								"CopyActivity_queuingDuration_in_secs": {
									"value": {
										"value": "@{activity('Copy IMdb from HTTP to Blob').output.executionDetails[0].detailedDurations.queuingDuration}",
										"type": "Expression"
									},
									"type": "String"
								},
								"CopyActivity_Start_Time": {
									"value": {
										"value": "@{activity('Copy IMdb from HTTP to Blob').output.executionDetails[0].start}",
										"type": "Expression"
									},
									"type": "String"
								},
								"CopyActivity_transferDuration_in_secs": {
									"value": {
										"value": "@{activity('Copy IMdb from HTTP to Blob').output.executionDetails[0].detailedDurations.transferDuration}",
										"type": "Expression"
									},
									"type": "String"
								},
								"copyDuration_in_secs": {
									"value": {
										"value": "@{activity('Copy IMdb from HTTP to Blob').output.executionDetails[0].detailedDurations.transferDuration}",
										"type": "Expression"
									},
									"type": "String"
								},
								"DataFactory_Name": {
									"value": {
										"value": "@{pipeline().DataFactory}",
										"type": "Expression"
									},
									"type": "String"
								},
								"DataRead": {
									"value": {
										"value": "@{activity('Copy IMdb from HTTP to Blob').output.dataRead}",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Destination": {
									"value": {
										"value": "@activity('Copy IMdb from HTTP to Blob').output.firstRow.SourceContainer",
										"type": "Expression"
									},
									"type": "String"
								},
								"effectiveIntegrationRuntime": {
									"value": {
										"value": "@{activity('Copy IMdb from HTTP to Blob').output.effectiveIntegrationRuntime}",
										"type": "Expression"
									},
									"type": "String"
								},
								"Execution_Status": {
									"value": {
										"value": "@{activity('Copy IMdb from HTTP to Blob').output.executionDetails[0].status}",
										"type": "Expression"
									},
									"type": "String"
								},
								"No_ParallelCopies": {
									"value": {
										"value": "@{activity('Copy IMdb from HTTP to Blob').output.usedParallelCopies}",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Pipeline_Name": {
									"value": {
										"value": "@{pipeline().Pipeline}",
										"type": "Expression"
									},
									"type": "String"
								},
								"rowsCopied": {
									"value": {
										"value": "@{activity('Copy IMdb from HTTP to Blob').output.dataRead}",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@{pipeline().RunId}",
										"type": "Expression"
									},
									"type": "String"
								},
								"Sink_Type": {
									"value": {
										"value": "@{activity('Copy IMdb from HTTP to Blob').output.executionDetails[0].sink.type}",
										"type": "Expression"
									},
									"type": "String"
								},
								"Source": {
									"value": {
										"value": "HTTP",
										"type": "Expression"
									},
									"type": "String"
								},
								"Source_Type": {
									"value": {
										"value": "HTTP",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerId": {
									"value": {
										"value": "@{pipeline().TriggerId}",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@{pipeline().TriggerName}",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@{pipeline().TriggerTime}",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerType": {
									"value": {
										"value": "@{pipeline().TriggerType}",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabaseLinkedService",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"FileName": {
						"type": "String",
						"defaultValue": "FileName"
					},
					"DestinationTableName": {
						"type": "String",
						"defaultValue": "DestinationTableName"
					}
				},
				"folder": {
					"name": "IMdb PipeLines/From HTTP to Blob_ADLS"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-22T14:42:44Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MoveFromBlobToADLS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup for Source and Dest ContainersFolder",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT distinct SourceContainer, SourceFolder, DestinationContainer, DestinationFolder\n  FROM [Mappings].[LoadFilesMappings] where isActive = 1",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_IMdb",
								"type": "DatasetReference"
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "Get Metadata",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Lookup for Source and Dest ContainersFolder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "BlobBinaryMetadataFileSource",
								"type": "DatasetReference",
								"parameters": {
									"Container": {
										"value": "@activity('Lookup for Source and Dest ContainersFolder').output.firstRow.SourceContainer",
										"type": "Expression"
									},
									"Folder": {
										"value": "@activity('Lookup for Source and Dest ContainersFolder').output.firstRow.SourceFolder",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "Filter Files Only",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get Metadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@endswith(item().name,'csv')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach Filtered File",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter Files Only",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter Files Only').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data from Blob into ADLS",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "BlobBinaryFileSource",
											"type": "DatasetReference",
											"parameters": {
												"Container": {
													"value": "@activity('Lookup for Source and Dest ContainersFolder').output.firstRow.SourceContainer",
													"type": "Expression"
												},
												"Folder": {
													"value": "@activity('Lookup for Source and Dest ContainersFolder').output.firstRow.SourceFolder",
													"type": "Expression"
												},
												"File": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ADLSBinaryFileDestination",
											"type": "DatasetReference",
											"parameters": {
												"DestinationContainer": {
													"value": "@activity('Lookup for Source and Dest ContainersFolder').output.firstRow.DestinationContainer",
													"type": "Expression"
												},
												"DestinationFolder": {
													"value": "@activity('Lookup for Source and Dest ContainersFolder').output.firstRow.DestinationFolder",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Log Execution - Completed",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Copy data from Blob into ADLS",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[Logs].[sp_UpdateLogTable]",
										"storedProcedureParameters": {
											"CopyActivity_End_Time": {
												"value": {
													"value": "@{utcnow()}",
													"type": "Expression"
												},
												"type": "String"
											},
											"CopyActivity_queuingDuration_in_secs": {
												"value": {
													"value": "@{activity('Copy data from Blob into ADLS').output.executionDetails[0].detailedDurations.queuingDuration}",
													"type": "Expression"
												},
												"type": "String"
											},
											"CopyActivity_Start_Time": {
												"value": {
													"value": "@{activity('Copy data from Blob into ADLS').output.executionDetails[0].start}",
													"type": "Expression"
												},
												"type": "String"
											},
											"CopyActivity_transferDuration_in_secs": {
												"value": {
													"value": "@{activity('Copy data from Blob into ADLS').output.executionDetails[0].detailedDurations.transferDuration}",
													"type": "Expression"
												},
												"type": "String"
											},
											"copyDuration_in_secs": {
												"value": {
													"value": "@{activity('Copy data from Blob into ADLS').output.executionDetails[0].detailedDurations.transferDuration}",
													"type": "Expression"
												},
												"type": "String"
											},
											"DataFactory_Name": {
												"value": {
													"value": "@{pipeline().DataFactory}",
													"type": "Expression"
												},
												"type": "String"
											},
											"DataRead": {
												"value": {
													"value": "@{activity('Copy data from Blob into ADLS').output.dataRead}",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"Destination": {
												"value": {
													"value": "@activity('Lookup for Source and Dest ContainersFolder').output.firstRow.SourceContainer",
													"type": "Expression"
												},
												"type": "String"
											},
											"effectiveIntegrationRuntime": {
												"value": {
													"value": "@{activity('Copy data from Blob into ADLS').output.effectiveIntegrationRuntime}",
													"type": "Expression"
												},
												"type": "String"
											},
											"Execution_Status": {
												"value": {
													"value": "@{activity('Copy data from Blob into ADLS').output.executionDetails[0].status}",
													"type": "Expression"
												},
												"type": "String"
											},
											"No_ParallelCopies": {
												"value": {
													"value": "@{activity('Copy data from Blob into ADLS').output.usedParallelCopies}",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"Pipeline_Name": {
												"value": {
													"value": "@{pipeline().Pipeline}",
													"type": "Expression"
												},
												"type": "String"
											},
											"rowsCopied": {
												"value": {
													"value": "@{activity('Copy data from Blob into ADLS').output.dataRead}",
													"type": "Expression"
												},
												"type": "String"
											},
											"RunID": {
												"value": {
													"value": "@{pipeline().RunId}",
													"type": "Expression"
												},
												"type": "String"
											},
											"Sink_Type": {
												"value": {
													"value": "@{activity('Copy data from Blob into ADLS').output.executionDetails[0].sink.type}",
													"type": "Expression"
												},
												"type": "String"
											},
											"Source": {
												"value": {
													"value": "@activity('Lookup for Source and Dest ContainersFolder').output.firstRow.DestinationContainer",
													"type": "Expression"
												},
												"type": "String"
											},
											"Source_Type": {
												"value": {
													"value": "@{activity('Copy data from Blob into ADLS').output.executionDetails[0].source.type}",
													"type": "Expression"
												},
												"type": "String"
											},
											"TriggerId": {
												"value": {
													"value": "@{pipeline().TriggerId}",
													"type": "Expression"
												},
												"type": "String"
											},
											"TriggerName": {
												"value": {
													"value": "@{pipeline().TriggerName}",
													"type": "Expression"
												},
												"type": "String"
											},
											"TriggerTime": {
												"value": {
													"value": "@{pipeline().TriggerTime}",
													"type": "Expression"
												},
												"type": "String"
											},
											"TriggerType": {
												"value": {
													"value": "@{pipeline().TriggerType}",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabaseLinkedService",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Remove All Files From Source Blob Container",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "Log Execution - Completed",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "BlobBinaryFileSource",
											"type": "DatasetReference",
											"parameters": {
												"Container": {
													"value": "@activity('Lookup for Source and Dest ContainersFolder').output.firstRow.SourceContainer",
													"type": "Expression"
												},
												"Folder": {
													"value": "@activity('Lookup for Source and Dest ContainersFolder').output.firstRow.SourceFolder",
													"type": "Expression"
												},
												"File": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										},
										"logStorageSettings": {
											"linkedServiceName": {
												"referenceName": "BlobBinaryFileSourceLinkedService",
												"type": "LinkedServiceReference"
											},
											"path": "imdbdatacollection"
										},
										"enableLogging": true,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					}
				],
				"folder": {
					"name": "IMdb PipeLines/From HTTP to Blob_ADLS"
				},
				"annotations": []
			},
			"dependsOn": []
		}
	]
}