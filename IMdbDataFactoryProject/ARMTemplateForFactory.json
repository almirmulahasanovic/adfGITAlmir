{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "IMdbDataFactoryProject"
		},
		"ADLSBinaryFileDestinationLinkedService_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ADLSBinaryFileDestinationLinkedService'"
		},
		"Adls_Sink_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'Adls_Sink'"
		},
		"Adls__Sink_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'Adls__Sink'"
		},
		"BlobIMdbLinkedService_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'BlobIMdbLinkedService'"
		},
		"MappingConfigurationFilesLS_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'MappingConfigurationFilesLS'"
		},
		"ADLSBinaryFileDestinationLinkedService_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adlsdatapractice.dfs.core.windows.net"
		},
		"ASQLConnection_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "IMdbSql"
		},
		"Adls_Sink_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adlsdatapractice.dfs.core.windows.net"
		},
		"Adls__Sink_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adlsdatapractice.dfs.core.windows.net"
		},
		"AzureKeyVaultConnection_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://kv-datapractice.vault.azure.net/"
		},
		"AzureSqlDatabaseLinkedService_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "sqldatabase"
		},
		"BlobBinaryFileSourceLinkedService_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "blobstorage"
		},
		"IMdbHTTPLinkedService_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://datasets.imdbws.com/"
		},
		"IMdbMappingConfigLinkedService_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "adls"
		},
		"IMdb_BloB_Files_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "blobstorage"
		},
		"KeyVaultConnection_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://kv-datapractice.vault.azure.net/"
		},
		"MappingConfigurationFilesLS_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adlsdatapractice.dfs.core.windows.net"
		},
		"bloblinkedservice_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "blobstorage"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Copy_IMdb_HTTP_To_BloB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy IMdb from HTTP to Blob",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "@{concat(pipeline().parameters.FileName, '.tsv.gz')}"
							},
							{
								"name": "Destination",
								"value": "imdbsourcedata/IMDb All/@{concat(pipeline().parameters.FileName, '.tsv')}"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "BlobIMdbLinkedService",
										"type": "LinkedServiceReference"
									},
									"path": {
										"value": "imdbsourcedata/IMDb All/@{concat(pipeline().parameters.FileName, '.tsv')}",
										"type": "Expression"
									}
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "HTTP_IMdb",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@{pipeline().parameters.FileName}.tsv.gz",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "Blob_IMdb",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@{pipeline().parameters.DestinationTableName}.csv",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Log Execution - Completed",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy IMdb from HTTP to Blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Logs].[sp_UpdateLogTable]",
							"storedProcedureParameters": {
								"CopyActivity_End_Time": {
									"value": {
										"value": "@{utcnow()}",
										"type": "Expression"
									},
									"type": "String"
								},
								"CopyActivity_queuingDuration_in_secs": {
									"value": {
										"value": "@{activity('Copy IMdb from HTTP to Blob').output.executionDetails[0].detailedDurations.queuingDuration}",
										"type": "Expression"
									},
									"type": "String"
								},
								"CopyActivity_Start_Time": {
									"value": {
										"value": "@{activity('Copy IMdb from HTTP to Blob').output.executionDetails[0].start}",
										"type": "Expression"
									},
									"type": "String"
								},
								"CopyActivity_transferDuration_in_secs": {
									"value": {
										"value": "@{activity('Copy IMdb from HTTP to Blob').output.executionDetails[0].detailedDurations.transferDuration}",
										"type": "Expression"
									},
									"type": "String"
								},
								"copyDuration_in_secs": {
									"value": {
										"value": "@{activity('Copy IMdb from HTTP to Blob').output.executionDetails[0].detailedDurations.transferDuration}",
										"type": "Expression"
									},
									"type": "String"
								},
								"DataFactory_Name": {
									"value": {
										"value": "@{pipeline().DataFactory}",
										"type": "Expression"
									},
									"type": "String"
								},
								"DataRead": {
									"value": {
										"value": "@{activity('Copy IMdb from HTTP to Blob').output.dataRead}",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Destination": {
									"value": {
										"value": "@activity('Copy IMdb from HTTP to Blob').output.firstRow.SourceContainer",
										"type": "Expression"
									},
									"type": "String"
								},
								"effectiveIntegrationRuntime": {
									"value": {
										"value": "@{activity('Copy IMdb from HTTP to Blob').output.effectiveIntegrationRuntime}",
										"type": "Expression"
									},
									"type": "String"
								},
								"Execution_Status": {
									"value": {
										"value": "@{activity('Copy IMdb from HTTP to Blob').output.executionDetails[0].status}",
										"type": "Expression"
									},
									"type": "String"
								},
								"No_ParallelCopies": {
									"value": {
										"value": "@{activity('Copy IMdb from HTTP to Blob').output.usedParallelCopies}",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Pipeline_Name": {
									"value": {
										"value": "@{pipeline().Pipeline}",
										"type": "Expression"
									},
									"type": "String"
								},
								"rowsCopied": {
									"value": {
										"value": "@{activity('Copy IMdb from HTTP to Blob').output.dataRead}",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@{pipeline().RunId}",
										"type": "Expression"
									},
									"type": "String"
								},
								"Sink_Type": {
									"value": {
										"value": "@{activity('Copy IMdb from HTTP to Blob').output.executionDetails[0].sink.type}",
										"type": "Expression"
									},
									"type": "String"
								},
								"Source": {
									"value": {
										"value": "HTTP",
										"type": "Expression"
									},
									"type": "String"
								},
								"Source_Type": {
									"value": {
										"value": "HTTP",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerId": {
									"value": {
										"value": "@{pipeline().TriggerId}",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@{pipeline().TriggerName}",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@{pipeline().TriggerTime}",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerType": {
									"value": {
										"value": "@{pipeline().TriggerType}",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabaseLinkedService",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"FileName": {
						"type": "String",
						"defaultValue": "FileName"
					},
					"DestinationTableName": {
						"type": "String",
						"defaultValue": "DestinationTableName"
					}
				},
				"folder": {
					"name": "IMdb PipeLines/From HTTP to Blob_ADLS"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-22T14:42:44Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/HTTP_IMdb')]",
				"[concat(variables('factoryId'), '/datasets/Blob_IMdb')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabaseLinkedService')]",
				"[concat(variables('factoryId'), '/linkedServices/BlobIMdbLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LoadAllFilesInSequence')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach File",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter Active Loads",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter Active Loads').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Exec Copy IMdb files From HTTP to Blob",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Copy_IMdb_HTTP_To_BloB",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"FileName": {
												"value": "@item().SourceFileName",
												"type": "Expression"
											},
											"DestinationTableName": {
												"value": "@item().DestinationFileName",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Move From Blob To ADLS",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Exec Copy IMdb files From HTTP to Blob",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "MoveFromBlobToADLS",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					},
					{
						"name": "Lookup Load Configuration Parameters",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select * from [Mappings].[LoadFilesMappings] where isActive = 1",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_IMdb",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Filter Active Loads",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Lookup Load Configuration Parameters",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup Load Configuration Parameters').output.value",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().IsActive, 1)",
								"type": "Expression"
							}
						}
					}
				],
				"variables": {
					"Files": {
						"type": "Array"
					},
					"ListOfFiles": {
						"type": "String"
					}
				},
				"folder": {
					"name": "IMdb PipeLines/From HTTP to Blob_ADLS"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SQL_IMdb')]",
				"[concat(variables('factoryId'), '/pipelines/Copy_IMdb_HTTP_To_BloB')]",
				"[concat(variables('factoryId'), '/pipelines/MoveFromBlobToADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Move From ADLS to SQL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data from ADLS to SQL",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "Truncate table stage.movies",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "tconst",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "tconst",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "titleType",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "titleType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "primaryTitle",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "primaryTitle",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "originalTitle",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "originalTitle",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "isAdult",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "isAdult",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "startYear",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "startYear",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "endYear",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "endYear",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "runtimeMinutes",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "runtimeMinutes",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "genres",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "genres",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ADLSSourceFileLocation",
								"type": "DatasetReference",
								"parameters": {
									"SourceContainer": "imdbdatacollection",
									"SourceFolder": "OriginalFiles",
									"SourceFile": "Basics.csv"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "SQL_IMdb_Destination",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"parameters": {
					"SourceContainer": {
						"type": "string"
					},
					"SourceFolder": {
						"type": "string"
					},
					"SourceFile": {
						"type": "string"
					},
					"Schema": {
						"type": "string"
					},
					"SQLTableName": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ADLSSourceFileLocation')]",
				"[concat(variables('factoryId'), '/datasets/SQL_IMdb_Destination')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MoveFromBlobToADLS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup for Source and Dest ContainersFolder",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT distinct SourceContainer, SourceFolder, DestinationContainer, DestinationFolder\n  FROM [Mappings].[LoadFilesMappings] where isActive = 1",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_IMdb",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "Get Metadata",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Lookup for Source and Dest ContainersFolder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "BlobBinaryMetadataFileSource",
								"type": "DatasetReference",
								"parameters": {
									"Container": {
										"value": "@activity('Lookup for Source and Dest ContainersFolder').output.firstRow.SourceContainer",
										"type": "Expression"
									},
									"Folder": {
										"value": "@activity('Lookup for Source and Dest ContainersFolder').output.firstRow.SourceFolder",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "Filter Files Only",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get Metadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@endswith(item().name,'csv')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach Filtered File",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter Files Only",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter Files Only').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data from Blob into ADLS",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "BlobBinaryFileSource",
											"type": "DatasetReference",
											"parameters": {
												"Container": {
													"value": "@activity('Lookup for Source and Dest ContainersFolder').output.firstRow.SourceContainer",
													"type": "Expression"
												},
												"Folder": {
													"value": "@activity('Lookup for Source and Dest ContainersFolder').output.firstRow.SourceFolder",
													"type": "Expression"
												},
												"File": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ADLSBinaryFileDestination",
											"type": "DatasetReference",
											"parameters": {
												"DestinationContainer": {
													"value": "@activity('Lookup for Source and Dest ContainersFolder').output.firstRow.DestinationContainer",
													"type": "Expression"
												},
												"DestinationFolder": {
													"value": "@activity('Lookup for Source and Dest ContainersFolder').output.firstRow.DestinationFolder",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Log Execution - Completed",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Copy data from Blob into ADLS",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[Logs].[sp_UpdateLogTable]",
										"storedProcedureParameters": {
											"CopyActivity_End_Time": {
												"value": {
													"value": "@{utcnow()}",
													"type": "Expression"
												},
												"type": "String"
											},
											"CopyActivity_queuingDuration_in_secs": {
												"value": {
													"value": "@{activity('Copy data from Blob into ADLS').output.executionDetails[0].detailedDurations.queuingDuration}",
													"type": "Expression"
												},
												"type": "String"
											},
											"CopyActivity_Start_Time": {
												"value": {
													"value": "@{activity('Copy data from Blob into ADLS').output.executionDetails[0].start}",
													"type": "Expression"
												},
												"type": "String"
											},
											"CopyActivity_transferDuration_in_secs": {
												"value": {
													"value": "@{activity('Copy data from Blob into ADLS').output.executionDetails[0].detailedDurations.transferDuration}",
													"type": "Expression"
												},
												"type": "String"
											},
											"copyDuration_in_secs": {
												"value": {
													"value": "@{activity('Copy data from Blob into ADLS').output.executionDetails[0].detailedDurations.transferDuration}",
													"type": "Expression"
												},
												"type": "String"
											},
											"DataFactory_Name": {
												"value": {
													"value": "@{pipeline().DataFactory}",
													"type": "Expression"
												},
												"type": "String"
											},
											"DataRead": {
												"value": {
													"value": "@{activity('Copy data from Blob into ADLS').output.dataRead}",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"Destination": {
												"value": {
													"value": "@activity('Lookup for Source and Dest ContainersFolder').output.firstRow.SourceContainer",
													"type": "Expression"
												},
												"type": "String"
											},
											"effectiveIntegrationRuntime": {
												"value": {
													"value": "@{activity('Copy data from Blob into ADLS').output.effectiveIntegrationRuntime}",
													"type": "Expression"
												},
												"type": "String"
											},
											"Execution_Status": {
												"value": {
													"value": "@{activity('Copy data from Blob into ADLS').output.executionDetails[0].status}",
													"type": "Expression"
												},
												"type": "String"
											},
											"No_ParallelCopies": {
												"value": {
													"value": "@{activity('Copy data from Blob into ADLS').output.usedParallelCopies}",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"Pipeline_Name": {
												"value": {
													"value": "@{pipeline().Pipeline}",
													"type": "Expression"
												},
												"type": "String"
											},
											"rowsCopied": {
												"value": {
													"value": "@{activity('Copy data from Blob into ADLS').output.dataRead}",
													"type": "Expression"
												},
												"type": "String"
											},
											"RunID": {
												"value": {
													"value": "@{pipeline().RunId}",
													"type": "Expression"
												},
												"type": "String"
											},
											"Sink_Type": {
												"value": {
													"value": "@{activity('Copy data from Blob into ADLS').output.executionDetails[0].sink.type}",
													"type": "Expression"
												},
												"type": "String"
											},
											"Source": {
												"value": {
													"value": "@activity('Lookup for Source and Dest ContainersFolder').output.firstRow.DestinationContainer",
													"type": "Expression"
												},
												"type": "String"
											},
											"Source_Type": {
												"value": {
													"value": "@{activity('Copy data from Blob into ADLS').output.executionDetails[0].source.type}",
													"type": "Expression"
												},
												"type": "String"
											},
											"TriggerId": {
												"value": {
													"value": "@{pipeline().TriggerId}",
													"type": "Expression"
												},
												"type": "String"
											},
											"TriggerName": {
												"value": {
													"value": "@{pipeline().TriggerName}",
													"type": "Expression"
												},
												"type": "String"
											},
											"TriggerTime": {
												"value": {
													"value": "@{pipeline().TriggerTime}",
													"type": "Expression"
												},
												"type": "String"
											},
											"TriggerType": {
												"value": {
													"value": "@{pipeline().TriggerType}",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabaseLinkedService",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Remove All Files From Source Blob Container",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "Log Execution - Completed",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "BlobBinaryFileSource",
											"type": "DatasetReference",
											"parameters": {
												"Container": {
													"value": "@activity('Lookup for Source and Dest ContainersFolder').output.firstRow.SourceContainer",
													"type": "Expression"
												},
												"Folder": {
													"value": "@activity('Lookup for Source and Dest ContainersFolder').output.firstRow.SourceFolder",
													"type": "Expression"
												},
												"File": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										},
										"logStorageSettings": {
											"linkedServiceName": {
												"referenceName": "BlobBinaryFileSourceLinkedService",
												"type": "LinkedServiceReference"
											},
											"path": "imdbdatacollection"
										},
										"enableLogging": true,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					}
				],
				"folder": {
					"name": "IMdb PipeLines/From HTTP to Blob_ADLS"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SQL_IMdb')]",
				"[concat(variables('factoryId'), '/datasets/BlobBinaryMetadataFileSource')]",
				"[concat(variables('factoryId'), '/datasets/BlobBinaryFileSource')]",
				"[concat(variables('factoryId'), '/datasets/ADLSBinaryFileDestination')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabaseLinkedService')]",
				"[concat(variables('factoryId'), '/linkedServices/BlobBinaryFileSourceLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLSBinaryFileDestination')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLSBinaryFileDestinationLinkedService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"DestinationContainer": {
						"type": "string"
					},
					"DestinationFolder": {
						"type": "string"
					}
				},
				"folder": {
					"name": "IMdb DataSets/Blob_To_ADLS"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().DestinationFolder",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().DestinationContainer",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLSBinaryFileDestinationLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLSSourceFileLocation')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Adls__Sink",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SourceContainer": {
						"type": "string"
					},
					"SourceFolder": {
						"type": "string"
					},
					"SourceFile": {
						"type": "string"
					}
				},
				"folder": {
					"name": "IMdb DataSets/ADLS_To_SQL"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().SourceFile",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().SourceFolder",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().SourceContainer",
							"type": "Expression"
						}
					},
					"columnDelimiter": "\t",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Adls__Sink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BlobBinaryFileSource')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BlobBinaryFileSourceLinkedService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Container": {
						"type": "string"
					},
					"Folder": {
						"type": "string"
					},
					"File": {
						"type": "string"
					}
				},
				"folder": {
					"name": "IMdb DataSets/Blob_To_ADLS"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().File",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().Folder",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().Container",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BlobBinaryFileSourceLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BlobBinaryMetadataFileSource')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BlobBinaryFileSourceLinkedService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Container": {
						"type": "string"
					},
					"Folder": {
						"type": "string"
					}
				},
				"folder": {
					"name": "IMdb DataSets/Blob_To_ADLS"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@dataset().Folder",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().Container",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BlobBinaryFileSourceLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Blob_IMdb')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BlobIMdbLinkedService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "string",
						"defaultValue": "FileName"
					}
				},
				"folder": {
					"name": "IMdb DataSets/Init_Extraction_And_Store_From_HTTP"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": "IMDb All",
						"container": "imdbsourcedata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BlobIMdbLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HTTP_IMdb')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "IMdbHTTPLinkedService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "string",
						"defaultValue": "FileName"
					}
				},
				"folder": {
					"name": "IMdb DataSets/Init_Extraction_And_Store_From_HTTP"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "@dataset().FileName",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"compressionCodec": "gzip",
					"compressionLevel": "Optimal",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/IMdbHTTPLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_IMdb')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabaseLinkedService",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "IMdb DataSets/SQL_Dataset"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "Mappings",
					"table": "LoadFilesMappings"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabaseLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_IMdb_Destination')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabaseLinkedService",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "IMdb DataSets/ADLS_To_SQL"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "stage",
					"table": "movies"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabaseLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLSBinaryFileDestinationLinkedService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ADLSBinaryFileDestinationLinkedService_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ADLSBinaryFileDestinationLinkedService_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ASQLConnection')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "KeyVaultConnection",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('ASQLConnection_properties_typeProperties_connectionString_secretName')]"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/KeyVaultConnection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Adls_Sink')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('Adls_Sink_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('Adls_Sink_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Adls__Sink')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('Adls__Sink_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('Adls__Sink_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureKeyVaultConnection')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVaultConnection_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabaseLinkedService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "KeyVaultConnection",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('AzureSqlDatabaseLinkedService_properties_typeProperties_connectionString_secretName')]"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/KeyVaultConnection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BlobBinaryFileSourceLinkedService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "KeyVaultConnection",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('BlobBinaryFileSourceLinkedService_properties_typeProperties_connectionString_secretName')]"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/KeyVaultConnection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BlobIMdbLinkedService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('BlobIMdbLinkedService_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/IMdbHTTPLinkedService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('IMdbHTTPLinkedService_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/IMdbMappingConfigLinkedService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "KeyVaultConnection",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('IMdbMappingConfigLinkedService_properties_typeProperties_connectionString_secretName')]"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/KeyVaultConnection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/IMdb_BloB_Files')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "KeyVaultConnection",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('IMdb_BloB_Files_properties_typeProperties_connectionString_secretName')]"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/KeyVaultConnection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/KeyVaultConnection')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('KeyVaultConnection_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MappingConfigurationFilesLS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('MappingConfigurationFilesLS_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('MappingConfigurationFilesLS_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/bloblinkedservice')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "KeyVaultConnection",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('bloblinkedservice_properties_typeProperties_connectionString_secretName')]"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/KeyVaultConnection')]"
			]
		}
	]
}